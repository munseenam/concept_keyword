package org.example;


public class checkKeyword {
   public String reservedWords[] = {"break", "case", "continue", "default", "else", "for", "if","return", "var","abstract","assert","boolean",
            "byte","catch","char","class","do","double","enum","synchronized","this","throw","throws","transient","try",
            "void","volatile","while","exports","extends","final","finally","float","implements","import","instanceof","int","interface",
            "long","module","native","new","package","private","protected","public","requires","short","static","strictfb","super","switch",
            "true","false","null"};
    public String checkword(String word) {


       // Scanner input = new Scanner(System.in);


        String yourWord = word;
        System.out.println("word:"+yourWord);
        String res = yourWord + " is not a keyword";
        System.out.println(res);
        for (int i = 0; i < reservedWords.length; i++) {
            if (reservedWords[0].equals(yourWord)) {
                res = yourWord + " is a keyword.\tIt helps you to Breaks out of a loop or a switch block";
                System.out.println(res);
                break;

            } else if (reservedWords[1].equals(yourWord)) {
                res = yourWord + " is a keyword.\tThe case keyword marks a block of code in a switch statement.";
                System.out.println(res);
                break;

            } else if (reservedWords[2].equals(yourWord)) {
                res = yourWord + " is a keyword.\t It helps to continues to the next iteration of a loop";
                System.out.println(res);
                break;

            }else if (reservedWords[3].equals(yourWord)) {
                res = yourWord + " is a keyword.\t It helps to Specifies the default block of code in a switch statement";
                System.out.println(res);
                break;

            }else if (reservedWords[4].equals(yourWord)) {
                res = yourWord + " is a keyword.\t It is Used in conditional statements";
                System.out.println(res);
                break;

            }else if (reservedWords[5].equals(yourWord)) {
                res = yourWord + " is a keyword.\tIt is used while creating a for loop";
                System.out.println(res);
                break;

            }else if (reservedWords[6].equals(yourWord)) {
                res = yourWord + " is a keyword.\t It is used while creating a conditional statement.";
                System.out.println(res);
                break;

            }else if (reservedWords[7].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tFinished the execution of a method, and can be used to return a value from a method";
                System.out.println(res);
                break;

            }else if (reservedWords[8].equals(yourWord)) {
                res = yourWord + " is a keyword.\t \tDeclares a variable. New in Java 10";
                System.out.println(res);
                break;

            }else if (reservedWords[9].equals(yourWord)) {
                res = yourWord + " is a keyword.\t A non-access modifier. Used for classes and methods: An abstract class cannot be used to create objects (to access it, it must be inherited from another class). An abstract method can only be used in an abstract class,and it does not have a body. The body is provided by the subclass (inherited from)";
                System.out.println(res);
                break;

            }else if (reservedWords[10].equals(yourWord)) {
                res = yourWord + " is a keyword.\tUsed For debugging.";
                System.out.println(res);
                break;

            }else if (reservedWords[11].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA data type that can only store true and false values";
                System.out.println(res);
                break;

            }else if (reservedWords[12].equals(yourWord)) {
                res = yourWord + " is a keyword.\t \tA data type that can store whole numbers from -128 and 127";
                System.out.println(res);
                break;

            }else if (reservedWords[13].equals(yourWord)) {
                res = yourWord + " is a keyword.\t Catches exceptions generated by try statements";
                System.out.println(res);
                break;

            }else if (reservedWords[14].equals(yourWord)) {
                res = yourWord + " is a keyword.\t \tA data type that is used to store a single character";
                System.out.println(res);
                break;

            }else if (reservedWords[15].equals(yourWord)) {
                res = yourWord + " is a keyword.\t \tDefines a class";
                System.out.println(res);
                break;

            }else if (reservedWords[16].equals(yourWord)) {
                res = yourWord + " is a keyword.\tUsed together with while to create a do-while loop";
                System.out.println(res);
                break;

            }else if (reservedWords[17].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA data type that can store whole numbers from 1.7e−308 to 1.7e+308";
                System.out.println(res);
                break;

            }else if (reservedWords[18].equals(yourWord)) {
                res = yourWord + " is a keyword.\tDeclares an enumerated (unchangeable) type";
                System.out.println(res);
                break;

            }else if (reservedWords[19].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA non-access modifier, which specifies that methods can only be accessed by one thread at a time";
                System.out.println(res);
                break;

            }else if (reservedWords[20].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tRefers to the current object in a method or constructor";
                System.out.println(res);
                break;

            }else if (reservedWords[21].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tCreates a custom error";
                System.out.println(res);
                break;

            }else if (reservedWords[22].equals(yourWord)) {
                res = yourWord + " is a keyword.\tIndicates what exceptions may be thrown by a method";
                System.out.println(res);
                break;

            }else if (reservedWords[23].equals(yourWord)) {
                res = yourWord + " is a keyword.\t	A non-accesss modifier, which specifies that an attribute is not part of an object's persistent state";
                System.out.println(res);
                break;

            }else if (reservedWords[24].equals(yourWord)) {
                res = yourWord + " is a keyword.\tCreates a try...catch statement";
                System.out.println(res);
                break;

            }else if (reservedWords[25].equals(yourWord)) {
                res = yourWord + " is a keyword.\tSpecifies that a method should not have a return value";
                System.out.println(res);
                break;

            }else if (reservedWords[26].equals(yourWord)) {
                res = yourWord + " is a keyword.\tIndicates that an attribute is not cached thread-locally, and is always read from the \"main memory\"";
                System.out.println(res);
                break;

            }else if (reservedWords[27].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tCreates a while loop";
                System.out.println(res);
                break;

            }else if (reservedWords[28].equals(yourWord)) {
                res = yourWord + " is a keyword.\tExports a package with a module. New in Java 9";
                System.out.println(res);
                break;

            }else if (reservedWords[29].equals(yourWord)) {
                res = yourWord + " is a keyword.\tExtends a class (indicates that a class is inherited from another class)";
                System.out.println(res);
                break;

            }else if (reservedWords[30].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA non-access modifier used for classes, attributes and methods, which makes them non-changeable (impossible to inherit or override)";
                System.out.println(res);
                break;

            }else if (reservedWords[31].equals(yourWord)) {
                res = yourWord + " is a keyword.\tUsed with exceptions, a block of code that will be executed no matter if there is an exception or not";
                System.out.println(res);
                break;

            }else if (reservedWords[32].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA data type that can store whole numbers from 3.4e−038 to 3.4e+038";
                System.out.println(res);
                break;

            }else if (reservedWords[33].equals(yourWord)) {
                res = yourWord + " is a keyword.\tImplements an interface";
                System.out.println(res);
                break;

            }else if (reservedWords[34].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tUsed to import a package, class or interface";
                System.out.println(res);
                break;

            }else if (reservedWords[35].equals(yourWord)) {
                res = yourWord + " is a keyword.\tChecks whether an object is an instance of a specific class or an interface";
                System.out.println(res);
                break;

            }else if (reservedWords[36].equals(yourWord)) {
                res = yourWord + " is a keyword.\t	A data type that can store whole numbers from -2147483648 to 2147483647";
                System.out.println(res);
                break;

            }else if (reservedWords[37].equals(yourWord)) {
                res = yourWord + " is a keyword.\tUsed to declare a special type of class that only contains abstract methods";
                System.out.println(res);
                break;

            }else if (reservedWords[38].equals(yourWord)) {
                res = yourWord + " is a keyword.\t A data type that can store whole numbers from -9223372036854775808 to 9223372036854775808";
                System.out.println(res);
                break;

            }else if (reservedWords[39].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tDeclares a module. New in Java 9";
                System.out.println(res);
                break;

            }else if (reservedWords[40].equals(yourWord)) {
                res = yourWord + " is a keyword.\t Specifies that a method is not implemented in the same Java source file (but in another language)";
                System.out.println(res);
                break;

            }else if (reservedWords[41].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tCreates new objects";
                System.out.println(res);
                break;

            }else if (reservedWords[42].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tDeclares a package";
                System.out.println(res);
                break;

            }else if (reservedWords[43].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tAn access modifier used for attributes, methods and constructors, making them only accessible within the declared class";
                System.out.println(res);
                break;

            }else if (reservedWords[44].equals(yourWord)) {
                res = yourWord + " is a keyword.\tAn access modifier used for attributes, methods and constructors, making them accessible in the same package and subclasses";
                System.out.println(res);
                break;

            }else if (reservedWords[45].equals(yourWord)) {
                res = yourWord + " is a keyword.\tAn access modifier used for classes, attributes, methods and constructors, making them accessible by any other class";
                System.out.println(res);
                break;

            }else if (reservedWords[46].equals(yourWord)) {
                res = yourWord + " is a keyword.\t\tSpecifies required libraries inside a module. New in Java 9";
                System.out.println(res);
                break;

            }else if (reservedWords[47].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA data type that can store whole numbers from -32768 to 32767";
                System.out.println(res);
                break;

            }else if (reservedWords[48].equals(yourWord)) {
                res = yourWord + " is a keyword.\tA non-access modifier used for methods and attributes. Static methods/attributes can be accessed without creating an object of a class";
                System.out.println(res);
                break;

            }else if (reservedWords[49].equals(yourWord)) {
                res = yourWord + " is a keyword.\tRestrict the precision and rounding of floating point calculations";
                System.out.println(res);
                break;

            }else if (reservedWords[50].equals(yourWord)) {
                res = yourWord + " is a keyword.\tRefers to superclass (parent) objects";
                System.out.println(res);
                break;

            }else if (reservedWords[51].equals(yourWord)) {
                res = yourWord + " is a keyword.\tSelects one of many code blocks to be executed";
                System.out.println(res);
                break;

            }else if (reservedWords[52].equals(yourWord)) {
                res = yourWord + " is not a keyword.\t true, false, and null are not keywords, but they are literals and reserved words that cannot be used as identifiers.";
                System.out.println(res);
                break;

            }else if (reservedWords[53].equals(yourWord)) {
                res = yourWord + " is not a keyword.\ttrue, false, and null are not keywords, but they are literals and reserved words that cannot be used as identifiers.";
                System.out.println(res);
                break;

            }else if (reservedWords[54].equals(yourWord)) {
                res = yourWord + " is not a keyword.\ttrue, false, and null are not keywords, but they are literals and reserved words that cannot be used as identifiers.";
                System.out.println(res);
                break;
            }
        }
        return res;
    }
}

